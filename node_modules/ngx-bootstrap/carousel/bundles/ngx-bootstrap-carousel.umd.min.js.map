{"version":3,"sources":["../../../tslib/tslib.es6.js","../../../../src/carousel/carousel.config.ts","../../../../src/carousel/carousel.component.html","../../../../src/carousel/carousel.component.ts","../../../../src/carousel/utils.ts","../../../../src/carousel/slide.component.ts","../../../../src/carousel/carousel.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","this","interval","noPause","noWrap","showIndicators","pauseOnFocus","indicatorsByChunk","itemsPerSlide","singleSlideOffset","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵclassProp","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵattribute","i_r11","i0.ɵɵtext","i0.ɵɵelement","CarouselConfig","factory","providedIn","Injectable","Direction","_currentId","CarouselComponent","config","ngZone","isAnimated","activeSlideChange","EventEmitter","slideRangeChange","startFromIndex","_interval","_slides","LinkedList","_currentVisibleSlidesIndex","isPlaying","destroyed","currentId","getActive","slide","active","makeSlidesConsistent","slides","forEach","index","item","order","assign","defineProperty","prototype","_currentActiveSlide","multilist","toString","customActiveSlide","_select","restartTimer","toArray","indexes","getVisibleIndexes","Array","includes","isBs3","getBsVer","ngAfterViewInit","_this","setTimeout","_chunkedSlides","array","size","out","Math","ceil","chunk","splice","chunkByNumber","mapSlidesAndIndexes","selectInitialSlides","ngOnDestroy","addSlide","add","undefined","activeSlide","play","removeSlide","remIndex","indexOf","nextSlideIndex_1","isLast","remove","currentSlideIndex_1","getCurrentSlideIndex","emit","nextSlideFromInterval","force","move","NEXT","nextSlide","previousSlide","PREV","getFirstVisibleIndex","findIndex","getLastVisibleIndex","predicate","l","findLastIndex","direction","firstVisibleIndex","lastVisibleIndex","moveMultilist","findNextSlideIndex","keydownPress","event","keyCode","key","preventDefault","onMouseLeave","onMouseUp","pauseFocusIn","resetTimer","pauseFocusOut","selectSlide","selectSlideRange","pause","isFirst","indicatorsSlides","filter","startIndex","hideSlides","_slidesWithIndexes","slidesToAppend","slice","selectRangeByNestedIndex","nextSlideIndex","Error","map","isIndexInRange","isIndexOnTheEdges","endIndex","selectedRange","slidesList","list","find","isVisibleSlideListLast","isVisibleSlideListFirst","moveSliderByOneItem","indexToHide","indexToShow","slideToHide","get","slideToShow","slidesToReorder","shift","pop","isNaN","currentSlide","currentInterval","runOutsideAngular","setInterval","nInterval","run","clearInterval","checkDisabledClass","buttonType","isFirstSlideVisible","isLastSlideVisible","i0","NgZone","selectors","inputs","outputs","ngContentSelectors","decls","vars","consts","template","rf","ctx","$event","i0.ɵɵprojection","Component","selector","templateUrl","Input","Output","SlideComponent","carousel","itemWidth","addClass","ngOnInit","_a","hostVars","hostBindings","host","styles","HostBinding","CarouselModule","forRoot","ngModule","providers","imports","CommonModule","declarations","exports","NgModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarouselConfig {\n  /* Default interval of auto changing of slides */\n  interval = 5000;\n\n  /* Is loop of auto changing of slides can be paused */\n  noPause = false;\n\n  /* Is slides can wrap from the last to the first slide */\n  noWrap = false;\n\n  /* Show carousel-indicators */\n  showIndicators = true;\n\n  /* Slides can be paused on focus */\n  pauseOnFocus = false;\n\n  /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */\n  indicatorsByChunk = false;\n\n  /* If value more then 1 — carousel works in multilist mode */\n  itemsPerSlide = 1;\n\n  /* If `true` — carousel shifts by one element. By default carousel shifts by number\n    of visible elements (itemsPerSlide field) */\n  singleSlideOffset = false;\n}\n","<div (mouseenter)=\"pause()\"\n     (mouseleave)=\"onMouseLeave()\"\n     (mouseup)=\"onMouseUp()\"\n     (keydown)=\"keydownPress($event)\"\n     (focusin)=\"pauseFocusIn()\"\n     (focusout)=\"pauseFocusOut()\"\n     [id]=\"currentId\"\n     class=\"carousel slide\" tabindex=\"0\">\n  <ng-container *ngIf=\"!_bsVer.isBs5 && showIndicators && slides.length > 1\">\n    <ol class=\"carousel-indicators\">\n      <li *ngFor=\"let slide of indicatorsSlides(); let i = index;\"\n          [class.active]=\"slide.active === true\"\n          (click)=\"selectSlide(i)\">\n      </li>\n    </ol>\n  </ng-container>\n  <ng-container *ngIf=\"_bsVer.isBs5 && showIndicators && slides.length > 1\">\n    <div class=\"carousel-indicators\">\n      <button\n        *ngFor=\"let slide of indicatorsSlides(); let i = index;\"\n        [class.active]=\"slide.active === true\"\n        (click)=\"selectSlide(i)\"\n        type=\"button\"\n        [attr.data-bs-target]=\"'#'+currentId\"\n        [attr.data-bs-slide-to]=\"i\" aria-current=\"true\"\n      >\n      </button>\n    </div>\n  </ng-container>\n  <div class=\"carousel-inner\" [ngStyle]=\"{'display': multilist ? 'flex' : 'block'}\">\n    <ng-content></ng-content>\n  </div>\n  <a class=\"left carousel-control carousel-control-prev\"\n     *ngIf=\"slides.length > 1\"\n     [class.disabled]=\"checkDisabledClass('prev')\"\n     [attr.data-bs-target]=\"'#'+currentId\"\n     (click)=\"previousSlide()\"\n      tabindex=\"0\" role=\"button\">\n    <span class=\"icon-prev carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span *ngIf=\"isBs4\" class=\"sr-only visually-hidden\">Previous</span>\n  </a>\n  <a class=\"right carousel-control carousel-control-next\"\n     *ngIf=\"slides.length > 1\"\n     [class.disabled]=\"checkDisabledClass('next')\"\n     [attr.data-bs-target]=\"'#'+currentId\"\n     (click)=\"nextSlide()\"\n     tabindex=\"0\" role=\"button\">\n    <span class=\"icon-next carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only visually-hidden\">Next</span>\n  </a>\n</div>\n","/***\n * pause (not yet supported) (?string='hover') - event group name which pauses\n * the cycling of the carousel, if hover pauses on mouseenter and resumes on\n * mouseleave keyboard (not yet supported) (?boolean=true) - if false\n * carousel will not react to keyboard events\n * note: swiping not yet supported\n */\n/****\n * Problems:\n * 1) if we set an active slide via model changes, .active class remains on a\n * current slide.\n * 2) if we have only one slide, we shouldn't show prev/next nav buttons\n * 3) if first or last slide is active and noWrap is true, there should be\n * \"disabled\" class on the nav buttons.\n * 4) default interval should be equal 5000\n */\n\nimport {\n  Component, EventEmitter, Input, NgZone, OnDestroy, Output, AfterViewInit\n} from '@angular/core';\n\nimport { isBs3, LinkedList, getBsVer, IBsVersion } from 'ngx-bootstrap/utils';\nimport { SlideComponent } from './slide.component';\nimport { CarouselConfig } from './carousel.config';\nimport { findLastIndex, chunkByNumber, isNumber } from './utils';\nimport { SlideWithIndex, IndexedSlideList } from './models';\n\nexport enum Direction {\n  UNKNOWN,\n  NEXT,\n  PREV\n}\n\nlet _currentId = 1;\n\n/**\n * Base element to create carousel\n */\n@Component({\n  selector: 'carousel',\n  templateUrl: './carousel.component.html'\n})\nexport class CarouselComponent implements AfterViewInit, OnDestroy {\n  /* If `true` — carousel will not cycle continuously and will have hard stops (prevent looping) */\n  @Input() noWrap = false;\n  /*  If `true` — will disable pausing on carousel mouse hover */\n  @Input() noPause = false;\n  /*  If `true` — carousel-indicators are visible  */\n  @Input() showIndicators = true;\n  /*  If `true` - autoplay will be stopped on focus */\n  @Input() pauseOnFocus = false;\n  /* If `true` - carousel indicators indicate slides chunks\n     works ONLY if singleSlideOffset = FALSE */\n  @Input() indicatorsByChunk = false;\n  /* If value more then 1 — carousel works in multilist mode */\n  @Input() itemsPerSlide = 1;\n  /* If `true` — carousel shifts by one element. By default carousel shifts by number\n     of visible elements (itemsPerSlide field) */\n  @Input() singleSlideOffset = false;\n  /** Turn on/off animation. Animation doesn't work for multilist carousel */\n  @Input() isAnimated = false;\n\n  /** Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property */\n  @Output()\n  activeSlideChange = new EventEmitter<number>(false);\n\n  /** Will be emitted when active slides has been changed in multilist mode */\n  @Output()\n  slideRangeChange = new EventEmitter<number[]|void>();\n\n  /** Index of currently displayed slide(started for 0) */\n  @Input()\n  set activeSlide(index: number) {\n    if (this.multilist) {\n      return;\n    }\n\n    if (isNumber(index)) {\n      this.customActiveSlide = index;\n    }\n\n    if (this._slides.length && index !== this._currentActiveSlide) {\n      this._select(index);\n    }\n  }\n\n  get activeSlide(): number {\n    return this._currentActiveSlide || 0;\n  }\n\n  /* Index to start display slides from it */\n  @Input()\n  startFromIndex = 0;\n\n  /**\n   * Delay of item cycling in milliseconds. If false, carousel won't cycle\n   * automatically.\n   */\n  @Input()\n  get interval(): number {\n    return this._interval;\n  }\n\n  set interval(value: number) {\n    this._interval = value;\n    this.restartTimer();\n  }\n\n  get slides(): SlideComponent[] {\n    return this._slides.toArray();\n  }\n\n  get isFirstSlideVisible(): boolean {\n    const indexes = this.getVisibleIndexes();\n    if (!indexes || (indexes instanceof Array && !indexes.length)) {\n      return false;\n    }\n\n    return indexes.includes(0);\n  }\n\n  get isLastSlideVisible(): boolean {\n    const indexes = this.getVisibleIndexes();\n    if (!indexes || (indexes instanceof Array && !indexes.length)) {\n      return false;\n    }\n\n    return indexes.includes(this._slides.length -1);\n  }\n\n  protected currentInterval?: number;\n  protected _currentActiveSlide?: number;\n  protected _interval = 5000;\n  protected _slides: LinkedList<SlideComponent> = new LinkedList<SlideComponent>();\n  protected _chunkedSlides?: SlideWithIndex[][];\n  protected _slidesWithIndexes?: SlideWithIndex[];\n  protected _currentVisibleSlidesIndex = 0;\n  protected isPlaying = false;\n  protected destroyed = false;\n  private customActiveSlide?: number;\n  currentId = 0;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  get _bsVer(): IBsVersion {\n    return getBsVer();\n  }\n\n  constructor(config: CarouselConfig, private ngZone: NgZone) {\n    Object.assign(this, config);\n    this.currentId = _currentId++;\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      if (this.singleSlideOffset) {\n        this.indicatorsByChunk = false;\n      }\n      if (this.multilist) {\n        this._chunkedSlides = chunkByNumber(\n          this.mapSlidesAndIndexes(),\n          this.itemsPerSlide\n        );\n        this.selectInitialSlides();\n      }\n\n      if (this.customActiveSlide && !this.multilist) {\n        this._select(this.customActiveSlide);\n      }\n    }, 0);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  /**\n   * Adds new slide. If this slide is first in collection - set it as active\n   * and starts auto changing\n   * @param slide\n   */\n  addSlide(slide: SlideComponent): void {\n    this._slides.add(slide);\n\n    if (this.multilist && this._slides.length <= this.itemsPerSlide) {\n      slide.active = true;\n    }\n\n    if (!this.multilist && this.isAnimated) {\n      slide.isAnimated = true;\n    }\n\n    if (!this.multilist && this._slides.length === 1) {\n      this._currentActiveSlide = undefined;\n      if (!this.customActiveSlide) {\n        this.activeSlide = 0;\n      }\n      this.play();\n    }\n\n    if (this.multilist && this._slides.length > this.itemsPerSlide) {\n      this.play();\n    }\n  }\n\n  /**\n   * Removes specified slide. If this slide is active - will roll to another\n   * slide\n   * @param slide\n   */\n  removeSlide(slide: SlideComponent): void {\n    const remIndex = this._slides.indexOf(slide);\n\n    if (this._currentActiveSlide === remIndex) {\n      // removing of active slide\n      let nextSlideIndex: number;\n      if (this._slides.length > 1) {\n        // if this slide last - will roll to first slide, if noWrap flag is\n        // FALSE or to previous, if noWrap is TRUE in case, if this slide in\n        // middle of collection, index of next slide is same to removed\n        nextSlideIndex = !this.isLast(remIndex)\n          ? remIndex\n          : this.noWrap ? remIndex - 1 : 0;\n      }\n      this._slides.remove(remIndex);\n\n      // prevents exception with changing some value after checking\n      setTimeout(() => {\n        this._select(nextSlideIndex);\n      }, 0);\n    } else {\n      this._slides.remove(remIndex);\n      const currentSlideIndex = this.getCurrentSlideIndex();\n      setTimeout(() => {\n        // after removing, need to actualize index of current active slide\n        this._currentActiveSlide = currentSlideIndex;\n        this.activeSlideChange.emit(this._currentActiveSlide);\n      }, 0);\n    }\n  }\n\n  nextSlideFromInterval(force = false): void {\n    this.move(Direction.NEXT, force);\n  }\n\n  /**\n   * Rolling to next slide\n   * @param force: {boolean} if true - will ignore noWrap flag\n   */\n  nextSlide(force = false): void {\n    if (this.isPlaying) {\n      this.restartTimer();\n    }\n    this.move(Direction.NEXT, force);\n  }\n\n  /**\n   * Rolling to previous slide\n   * @param force: {boolean} if true - will ignore noWrap flag\n   */\n  previousSlide(force = false): void {\n    if (this.isPlaying) {\n      this.restartTimer();\n    }\n    this.move(Direction.PREV, force);\n  }\n\n  getFirstVisibleIndex(): number {\n    return this.slides.findIndex(this.getActive);\n  }\n\n  getLastVisibleIndex(): number {\n    return findLastIndex(this.slides, this.getActive);\n  }\n\n  getActive = (slide: SlideComponent) => slide.active;\n\n  move(direction: Direction, force = false): void {\n    const firstVisibleIndex = this.getFirstVisibleIndex();\n    const lastVisibleIndex = this.getLastVisibleIndex();\n\n    if (this.noWrap) {\n      if (\n        direction === Direction.NEXT &&\n        this.isLast(lastVisibleIndex) ||\n        direction === Direction.PREV &&\n        firstVisibleIndex === 0\n      ) {\n        return;\n      }\n    }\n\n    if (!this.multilist) {\n      this.activeSlide = this.findNextSlideIndex(direction, force) || 0;\n    } else {\n      this.moveMultilist(direction);\n    }\n  }\n\n  /**\n   * Swith slides by enter, space and arrows keys\n   * @internal\n   */\n  keydownPress(event: KeyboardEvent) {\n    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n      this.nextSlide();\n      event.preventDefault();\n\n      return;\n    }\n\n    if (event.keyCode === 37 || event.key === 'LeftArrow') {\n      this.previousSlide();\n\n      return;\n    }\n\n    if (event.keyCode === 39 || event.key === 'RightArrow') {\n      this.nextSlide();\n\n      return;\n    }\n  }\n\n  /**\n   * Play on mouse leave\n   * @internal\n   */\n  onMouseLeave(): void {\n    if (!this.pauseOnFocus) {\n      this.play();\n    }\n  }\n\n  /**\n   * Play on mouse up\n   * @internal\n   */\n  onMouseUp(): void {\n    if (!this.pauseOnFocus) {\n      this.play();\n    }\n  }\n\n  /**\n   * When slides on focus autoplay is stopped(optional)\n   * @internal\n   */\n  pauseFocusIn(): void {\n    if (this.pauseOnFocus) {\n      this.isPlaying = false;\n      this.resetTimer();\n    }\n  }\n\n  /**\n   * When slides out of focus autoplay is started\n   * @internal\n   */\n  pauseFocusOut(): void {\n    this.play();\n  }\n\n  /**\n   * Rolling to specified slide\n   * @param index: {number} index of slide, which must be shown\n   */\n  selectSlide(index: number): void {\n    if (this.isPlaying) {\n      this.restartTimer();\n    }\n\n    if (!this.multilist) {\n      this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;\n    } else {\n      this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);\n    }\n  }\n\n  /**\n   * Starts a auto changing of slides\n   */\n  play(): void {\n    if (!this.isPlaying) {\n      this.isPlaying = true;\n      this.restartTimer();\n    }\n  }\n\n  /**\n   * Stops a auto changing of slides\n   */\n  pause(): void {\n    if (!this.noPause) {\n      this.isPlaying = false;\n      this.resetTimer();\n    }\n  }\n\n  /**\n   * Finds and returns index of currently displayed slide\n   */\n  getCurrentSlideIndex(): number {\n    return this._slides.findIndex(this.getActive);\n  }\n\n  /**\n   * Defines, whether the specified index is last in collection\n   * @param index\n   */\n  isLast(index: number): boolean {\n    return index + 1 >= this._slides.length;\n  }\n\n  /**\n   * Defines, whether the specified index is first in collection\n   * @param index\n   */\n  isFirst(index: number): boolean {\n    return index === 0;\n  }\n\n  indicatorsSlides(): SlideComponent[] {\n    return this.slides.filter(\n      (slide: SlideComponent, index: number) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0\n    );\n  }\n\n  private selectInitialSlides(): void {\n    const startIndex = this.startFromIndex <= this._slides.length\n      ? this.startFromIndex\n      : 0;\n\n    this.hideSlides();\n\n    if (this.singleSlideOffset) {\n      this._slidesWithIndexes = this.mapSlidesAndIndexes();\n\n      if (this._slides.length - startIndex < this.itemsPerSlide) {\n        const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);\n\n        this._slidesWithIndexes = [\n          ...this._slidesWithIndexes,\n          ...slidesToAppend\n        ]\n          .slice(slidesToAppend.length)\n          .slice(0, this.itemsPerSlide);\n      } else {\n        this._slidesWithIndexes = this._slidesWithIndexes.slice(\n          startIndex,\n          startIndex + this.itemsPerSlide\n        );\n      }\n\n      this._slidesWithIndexes.forEach((slide: SlideWithIndex) => slide.item.active = true);\n      this.makeSlidesConsistent(this._slidesWithIndexes);\n    } else {\n      this.selectRangeByNestedIndex(startIndex);\n    }\n\n    this.slideRangeChange.emit(this.getVisibleIndexes());\n  }\n\n  /**\n   * Defines next slide index, depending of direction\n   * @param direction: Direction(UNKNOWN|PREV|NEXT)\n   * @param force: {boolean} if TRUE - will ignore noWrap flag, else will\n   *   return undefined if next slide require wrapping\n   */\n  private findNextSlideIndex(direction: Direction, force: boolean): number | void {\n    let nextSlideIndex = 0;\n\n    if (\n      !force &&\n      (this.isLast(this.activeSlide) &&\n        direction !== Direction.PREV &&\n        this.noWrap)\n    ) {\n      return;\n    }\n\n    switch (direction) {\n      case Direction.NEXT:\n        // if this is last slide, not force, looping is disabled\n        // and need to going forward - select current slide, as a next\n        if (typeof this._currentActiveSlide === 'undefined') {\n          nextSlideIndex = 0;\n          break;\n        }\n        if (!this.isLast(this._currentActiveSlide)) {\n          nextSlideIndex = this._currentActiveSlide + 1;\n          break;\n        }\n        nextSlideIndex = !force && this.noWrap ? this._currentActiveSlide : 0;\n        break;\n      case Direction.PREV:\n        // if this is first slide, not force, looping is disabled\n        // and need to going backward - select current slide, as a next\n        if (typeof this._currentActiveSlide === 'undefined') {\n          nextSlideIndex = 0;\n          break;\n        }\n        if (this._currentActiveSlide > 0) {\n          nextSlideIndex = this._currentActiveSlide - 1;\n          break;\n        }\n        if (!force && this.noWrap) {\n          nextSlideIndex = this._currentActiveSlide;\n          break;\n        }\n        nextSlideIndex = this._slides.length - 1;\n        break;\n      default:\n        throw new Error('Unknown direction');\n    }\n\n    return nextSlideIndex;\n  }\n\n  private mapSlidesAndIndexes(): SlideWithIndex[] {\n    return this.slides\n      .slice()\n      .map((slide: SlideComponent, index: number) => {\n        return {\n          index,\n          item: slide\n        };\n      });\n  }\n\n\n  private selectSlideRange(index: number): void {\n    if (this.isIndexInRange(index)) {\n      return;\n    }\n\n    this.hideSlides();\n\n    if (!this.singleSlideOffset) {\n      this.selectRangeByNestedIndex(index);\n    } else {\n      const startIndex = this.isIndexOnTheEdges(index)\n        ? index\n        : index - this.itemsPerSlide + 1;\n\n      const endIndex = this.isIndexOnTheEdges(index)\n        ? index + this.itemsPerSlide\n        : index + 1;\n\n      this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);\n      this.makeSlidesConsistent(this._slidesWithIndexes);\n\n      this._slidesWithIndexes.forEach((slide: SlideWithIndex) => slide.item.active = true);\n    }\n\n    this.slideRangeChange.emit(this.getVisibleIndexes());\n  }\n\n  private selectRangeByNestedIndex(index: number): void {\n    if (!this._chunkedSlides) {\n      return;\n    }\n\n    const selectedRange = this._chunkedSlides\n      .map((slidesList, i: number) => {\n        return {\n          index: i,\n          list: slidesList\n        };\n      })\n      .find(\n        (slidesList: IndexedSlideList) => {\n          return slidesList.list.find(slide => slide.index === index) !== undefined;\n        }\n      );\n\n    if (!selectedRange) {\n      return;\n    }\n\n    this._currentVisibleSlidesIndex = selectedRange.index;\n\n    this._chunkedSlides[selectedRange.index].forEach((slide: SlideWithIndex) => {\n      slide.item.active = true;\n    });\n  }\n\n  private isIndexOnTheEdges(index: number): boolean {\n    return (\n      index + 1 - this.itemsPerSlide <= 0 ||\n      index + this.itemsPerSlide <= this._slides.length\n    );\n  }\n\n  private isIndexInRange(index: number): boolean {\n    if (this.singleSlideOffset && this._slidesWithIndexes) {\n      const visibleIndexes = this._slidesWithIndexes.map((slide: SlideWithIndex) => slide.index);\n\n      return visibleIndexes.indexOf(index) >= 0;\n    }\n\n    return (\n      index <= this.getLastVisibleIndex() &&\n      index >= this.getFirstVisibleIndex()\n    );\n  }\n\n  private hideSlides(): void {\n    this.slides.forEach((slide: SlideComponent) => slide.active = false);\n  }\n\n  private isVisibleSlideListLast(): boolean {\n    if (!this._chunkedSlides) {\n      return false;\n    }\n\n    return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;\n  }\n\n  private isVisibleSlideListFirst(): boolean {\n    return this._currentVisibleSlidesIndex === 0;\n  }\n\n  private moveSliderByOneItem(direction: Direction): void {\n    let firstVisibleIndex: number;\n    let lastVisibleIndex: number;\n    let indexToHide: number;\n    let indexToShow: number;\n\n    if (this.noWrap) {\n      firstVisibleIndex = this.getFirstVisibleIndex();\n      lastVisibleIndex = this.getLastVisibleIndex();\n\n      indexToHide = direction === Direction.NEXT\n        ? firstVisibleIndex\n        : lastVisibleIndex;\n\n      indexToShow = direction !== Direction.NEXT\n        ? firstVisibleIndex - 1\n        : !this.isLast(lastVisibleIndex)\n          ? lastVisibleIndex + 1 : 0;\n\n      const slideToHide = this._slides.get(indexToHide);\n      if (slideToHide) {\n        slideToHide.active = false;\n      }\n\n      const slideToShow = this._slides.get(indexToShow);\n      if (slideToShow) {\n        slideToShow.active = true;\n      }\n\n      const slidesToReorder = this.mapSlidesAndIndexes().filter(\n        (slide: SlideWithIndex) => slide.item.active\n      );\n\n      this.makeSlidesConsistent(slidesToReorder);\n      if (this.singleSlideOffset) {\n        this._slidesWithIndexes = slidesToReorder;\n      }\n\n      this.slideRangeChange.emit(this.getVisibleIndexes());\n      return;\n    }\n\n    if (!this._slidesWithIndexes || !this._slidesWithIndexes[0]) {\n      return;\n    }\n\n    let index: number;\n\n    firstVisibleIndex = this._slidesWithIndexes[0].index;\n    lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;\n\n    if (direction === Direction.NEXT) {\n      this._slidesWithIndexes.shift();\n\n      index = this.isLast(lastVisibleIndex)\n        ? 0\n        : lastVisibleIndex + 1;\n\n      const item = this._slides.get(index);\n\n      if (item) {\n        this._slidesWithIndexes.push({ index, item });\n      }\n    } else {\n      this._slidesWithIndexes.pop();\n      index = this.isFirst(firstVisibleIndex)\n        ? this._slides.length - 1\n        : firstVisibleIndex - 1;\n\n      const item = this._slides.get(index);\n      if (item) {\n        this._slidesWithIndexes = [{ index, item }, ...this._slidesWithIndexes];\n      }\n    }\n\n    this.hideSlides();\n\n    this._slidesWithIndexes.forEach(slide => slide.item.active = true);\n    this.makeSlidesConsistent(this._slidesWithIndexes);\n\n    this.slideRangeChange.emit(\n      this._slidesWithIndexes.map((slide: SlideWithIndex) => slide.index)\n    );\n  }\n\n  private makeSlidesConsistent = (slides: SlideWithIndex[]): void => {\n    slides.forEach((slide: SlideWithIndex, index: number) => slide.item.order = index);\n  };\n\n  private moveMultilist(direction: Direction): void {\n    if (this.singleSlideOffset) {\n      this.moveSliderByOneItem(direction);\n    } else {\n      this.hideSlides();\n\n      if (this.noWrap) {\n        this._currentVisibleSlidesIndex = direction === Direction.NEXT\n          ? this._currentVisibleSlidesIndex + 1\n          : this._currentVisibleSlidesIndex - 1;\n      } else if (direction === Direction.NEXT) {\n        this._currentVisibleSlidesIndex = this.isVisibleSlideListLast()\n          ? 0\n          : this._currentVisibleSlidesIndex + 1;\n      } else {\n        if (this.isVisibleSlideListFirst()) {\n          this._currentVisibleSlidesIndex = this._chunkedSlides\n            ? this._chunkedSlides.length - 1\n            : 0;\n        } else {\n          this._currentVisibleSlidesIndex = this._currentVisibleSlidesIndex - 1;\n        }\n      }\n\n      if (this._chunkedSlides) {\n        this._chunkedSlides[this._currentVisibleSlidesIndex].forEach(\n          (slide: SlideWithIndex) => slide.item.active = true\n        );\n      }\n      this.slideRangeChange.emit(this.getVisibleIndexes());\n    }\n  }\n\n  private getVisibleIndexes(): number[] | void {\n    if (!this.singleSlideOffset && this._chunkedSlides) {\n      return this._chunkedSlides[this._currentVisibleSlidesIndex]\n        .map((slide: SlideWithIndex) => slide.index);\n    }\n\n    if (this._slidesWithIndexes) {\n      return this._slidesWithIndexes.map((slide: SlideWithIndex) => slide.index);\n    }\n  }\n\n  /**\n   * Sets a slide, which specified through index, as active\n   * @param index\n   */\n  private _select(index: number): void {\n    if (isNaN(index)) {\n      this.pause();\n\n      return;\n    }\n\n    if (!this.multilist && typeof this._currentActiveSlide !== 'undefined') {\n      const currentSlide = this._slides.get(this._currentActiveSlide);\n      if (typeof currentSlide !== 'undefined') {\n        currentSlide.active = false;\n      }\n    }\n\n    const nextSlide = this._slides.get(index);\n\n    if (typeof nextSlide !== 'undefined') {\n      this._currentActiveSlide = index;\n      nextSlide.active = true;\n      this.activeSlide = index;\n      this.activeSlideChange.emit(index);\n    }\n  }\n\n  /**\n   * Starts loop of auto changing of slides\n   */\n  private restartTimer() {\n    this.resetTimer();\n    const interval = +this.interval;\n    if (!isNaN(interval) && interval > 0) {\n      this.currentInterval = this.ngZone.runOutsideAngular<number>(() => {\n        return setInterval(() => {\n          const nInterval = +this.interval;\n          this.ngZone.run(() => {\n            if (\n              this.isPlaying &&\n              !isNaN(this.interval) &&\n              nInterval > 0 &&\n              this.slides.length\n            ) {\n              this.nextSlideFromInterval();\n            } else {\n              this.pause();\n            }\n          });\n        }, interval);\n      });\n    }\n  }\n\n  get multilist(): boolean {\n    return this.itemsPerSlide > 1;\n  }\n\n  /**\n   * Stops loop of auto changing of slides\n   */\n  private resetTimer(): void {\n    if (this.currentInterval) {\n      clearInterval(this.currentInterval);\n      this.currentInterval = void 0;\n    }\n  }\n\n  checkDisabledClass(buttonType: 'prev' | 'next'): boolean {\n    if (buttonType === 'prev') {\n      return (this.activeSlide === 0 && this.noWrap && !this.multilist) || (this.isFirstSlideVisible && this.noWrap && this.multilist);\n    }\n\n    return (this.isLast(this.activeSlide) && this.noWrap && !this.multilist) || (this.isLastSlideVisible && this.noWrap && this.multilist);\n  }\n}\n","/**\n * Returns the index of the last element in the array where predicate is true, and -1\n * otherwise.\n * @param array The source array to search in\n * @param predicate find calls predicate once for each element of the array, in descending\n * order, until it finds one where predicate returns true. If such an element is found,\n * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.\n */\nexport function findLastIndex<T>(array: T[], predicate: (value: T, index: number, obj: T[]) => boolean): number {\n  let l = array.length;\n\n  while (l--) {\n    if (predicate(array[l], l, array)) {\n      return l;\n    }\n  }\n\n  return -1;\n}\n\nexport function chunkByNumber<T>(array: T[], size: number): T[][] {\n  const out = [];\n  const n = Math.ceil((array.length) / size);\n  let i = 0;\n\n  while (i < n) {\n    const chunk = array.splice(\n      0,\n      (i === n - 1) && size < array.length ? array.length : size\n    );\n\n    out.push(chunk);\n    i++;\n  }\n\n  return out;\n}\n\nexport function isNumber(value?: any): value is number {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n","import {\n  Component,\n  HostBinding,\n  OnDestroy,\n  Input,\n  OnInit\n} from '@angular/core';\n\nimport { CarouselComponent } from './carousel.component';\n\n@Component({\n  selector: 'slide',\n  template: `\n    <div [class.active]=\"active\" class=\"item\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n  host: {\n    '[attr.aria-hidden]': '!active',\n    '[class.multilist-margin]': 'multilist'\n  },\n  styles: [`\n    :host.carousel-animation {\n       transition: opacity 0.6s ease, visibility 0.6s ease;\n       float: left;\n    }\n    :host.carousel-animation.active {\n      opacity: 1;\n      visibility: visible;\n    }\n    :host.carousel-animation:not(.active) {\n      display: block;\n      position: absolute;\n      opacity: 0;\n      visibility: hidden;\n    }\n    :host.multilist-margin {\n      margin-right: auto;\n    }\n    :host.carousel-item {\n      perspective: 1000px;\n    }\n  `]\n})\nexport class SlideComponent implements OnInit, OnDestroy {\n  /** Is current slide active */\n  @HostBinding('class.active')\n  @Input()\n  active = false;\n\n  @HostBinding('style.width') itemWidth = '100%';\n  @HostBinding('style.order') order = 0;\n  @HostBinding('class.carousel-animation') isAnimated = false;\n\n  /** Wraps element by appropriate CSS classes */\n  @HostBinding('class.item')\n  @HostBinding('class.carousel-item')\n  addClass = true;\n\n  /** Link to Parent(container-collection) component */\n  protected carousel: CarouselComponent;\n  multilist = false;\n  constructor(carousel: CarouselComponent) {\n    this.carousel = carousel;\n  }\n\n  /** Fires changes in container collection after adding a new slide instance */\n  ngOnInit(): void {\n    this.carousel.addSlide(this);\n    this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;\n    this.multilist = this.carousel?.itemsPerSlide > 1;\n  }\n\n  /** Fires changes in container collection after removing of this slide instance */\n  ngOnDestroy(): void {\n    this.carousel.removeSlide(this);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { CarouselComponent } from './carousel.component';\nimport { SlideComponent } from './slide.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SlideComponent, CarouselComponent],\n  exports: [SlideComponent, CarouselComponent]\n})\nexport class CarouselModule {\n  static forRoot(): ModuleWithProviders<CarouselModule> {\n    return { ngModule: CarouselModule, providers: [] };\n  }\n}\n"]}